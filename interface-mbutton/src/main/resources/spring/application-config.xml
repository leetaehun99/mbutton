<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">


	<context:annotation-config />
	
	<!-- [Properties] 설정 파일 -->
	<context:property-placeholder location="classpath:properties/${SERVER_MODE:local}/mysql.properties" ignore-unresolvable="true" />
	<util:properties id="applicationProp" location="classpath:properties/${SERVER_MODE:local}/application.properties" />
	<context:component-scan base-package="com.doo.mbutton">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" />
	</context:component-scan>
	
	<!-- [Datasource] 선언 -->
	<bean id="dataSource" class="org.apache.tomcat.dbcp.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${db.classname}" />
		<property name="url" value="${db.url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
	    <property name="initialSize" value="${db.initialSize}"/>
	    <property name="maxActive" value="${db.maxActive}"/>
	    <property name="maxIdle" value="${db.maxIdle}"/>
	    <property name="maxWait" value="${db.maxWait}"/>
	    <property name="validationQuery" value="${db.validationQuery}"/>
	    <property name="testOnBorrow" value="${db.testOnBorrow}"/>
	    <property name="testOnReturn" value="${db.testOnReturn}"/>
	    <property name="testWhileIdle" value="${db.testWhileIdle}"/>
	    <property name="timeBetweenEvictionRunsMillis" value="${db.timeBetweenEvictionRunsMillis}"/>
	</bean>

	<!-- [LOG] sql spy -->
	<bean id="spyDataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg ref="dataSource" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<property name="sqlPrefix" value="" />
			</bean>
		</property>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="spyDataSource" />
	</bean>

	<tx:annotation-driven transaction-manager="transactionManager" />

	<aop:aspectj-autoproxy />

	<!-- [Transaction] advice 설정 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="create*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="select*" read-only="true" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
			<tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>

	<!-- [Transaction] AOP 설정 -->
	<aop:config>
		<aop:pointcut id="servicePublicMethod" expression="execution(* com.doo.mbutton.*..*Service.*(..))" />
		<aop:advisor advice-ref="txAdvice" pointcut-ref="servicePublicMethod" />
	</aop:config>

	<!-- [Mybatis] define the SqlSessionFactory -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="spyDataSource" />
		<!-- typeAliasesPackage 은 sqlmap.xml 에 선언된 parameterType 이나, resultType에 
			사용되는 클래스를 자동을 찾도록 해주고 -->
		<property name="typeAliasesPackage" value="com.doo.mbutton" />
		
	</bean>

	<!-- [Mybatis] mapper scan 등록 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- basePackage 는 namespace 에 정의된 Dao 파일을 자동을 찾아준다. -->
		<property name="basePackage" value="com.doo.mbutton" />
	</bean>
	
	<bean id="statementNotifyCheck" class="com.doo.mbutton.common.helper.StatementNotifyCheck" />
	<bean id="commonUtil" class="com.doo.mbutton.common.helper.CommonUtil" />
	<bean id="jsonMapper" class="com.doo.mbutton.common.helper.JsonMapper" />
	<bean id="fileUtil" class="com.doo.mbutton.common.helper.FileUtil" />
</beans>
